nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  # There is no public container image yet. You need to set your own test.guide container image in your own repository!
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion or latest.
  tag: ""

imagePullSecrets: []

# Configure Base settings
baseSettings:
  # Default needs to be set to individual value
  uuid: 1
  # parent folder of test.guide workspace
  tgWorkspace: /home/tg_user/

# Configure admin credentials
serveradmin:
  name: ServerAdmin
  pass: TG-demo1
  mail: admin@localhost.loc
  company: local

secrets:
  dbCredentials:
    name: db-credentials
    userKey: user
    passwordKey: password
  dbMonitoringCredentials:
    name: dbMonitoring-credentials
    userKey: user
    passwordKey: password
  dbArtifactCredentials:
    name: dbArtifact-credentials
    userKey: user
    passwordKey: password

# Configure main database connection
useSecretsForCredentials: false
db:
  driver: H2
  # If the database is stored apart from the test.guide workspace database persistence must be handled separately.
  url: jdbc:h2:/home/tg_user/TTS-TM/TT-DB
  user: ATX
  password: ATX

# Configure monitoring database connection
dbMonitoring:
  driver: H2
  # If the database is stored apart from the test.guide workspace database persistence must be handled separately.
  url: jdbc:h2:/home/tg_user/TTS-TM/TT-DB-Monitoring
  user: ATX
  password: ATX

# Configure artifact database connection
dbArtifact:
  driver: H2
  # If the database is stored apart from the test.guide workspace database persistence must be handled separately.
  url: jdbc:h2:/home/tg_user/TTS-TM/TT-Artifact
  user: ATX
  password: ATX

# Import demo data
initDemo: false

# Set the license for test.guide, if not set, you will get prompted at first startup.
license:
  # Decide whether a local license file or a global license server is used for retrieving license information; possible options: "file" or "server"
  type: file
  key: ""

# Configure mail settings
mail:
  host: mail.localhost
  port: 25
  useSsl: false
  useTls: false
  smtpUsername: Example
  smtpUserPassword: Example

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 8085
  targetPort: 8085

# Declare environment variables passed into the container
env: []

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# In case no Ingress is used you can define a custom base URL instead of using localhost.
customHost: ""

persistence:
  enabled: false
  storageClass:
  accessMode: ReadWriteOnce
  size: 1Gi

podAnnotations: {}
podSecurityContext: {}
securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits: {}
  #  memory: 16Gi
  #  cpu: "4.0"
  requests: {}
  #  memory: 4Gi
  #  cpu: "2.0"

nodeSelector: {}
tolerations: []
affinity: {}
